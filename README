Прочитать
- миграции
- моки
- мейкфайл
- golang migrate и как создать миграции и зачем они нужны
- поднять базу в докере и накатить миграции, подключиться через dbeaver/datagrip/tableplus и убедиться что таблички созданы

--- ПАЙПЛАЙН - поднимаем постгрес в докере, создаем базу данных, накатываем миграции, подключаемся и проверяем что все ок

Банковский сервис - bankApp
Стек:
- Golang
- RESTApi, gin
- PostgreSQL
- Redis

Что будет делать наш сервис?
1. Создавать аккаунты, регистрация, логин пользователя
2. Операции с балансом, переводы, пополнения, списывания и так далее
3. Все эти данные нам нужно где-то хранить

Должен быть Makefile:
- Поднятие базы и удаление базы
- миграция табличек и дроп табличек
- генерация всякого кода
- прогон тестов
- поднятие твоего хттп сервера
- генерация моков

Нужно определиться с нашими данными



1. brew install sqlc
2. sqlc init
3. Папка query и sqlc
4. version: "1"
   packages:
       - name: "db"
         path: "./database/sqlc"
         queries: "./database/query"
         schema: "./database/migrations"
         engine: "postgresql"
         emit_json_tags: true
         emit_prepared_queries: false
         emit_interface: false
         emit_exact_table_names: false
5. В папке query пишем все круд операции для accounts, entries, transfers
6. Генерим после этого все
7. TestMain с коннектом
8. Все крудовские операции покрыть тестами
9. Прочитать про ACID, уровни изоляции в постгре, про работу с транзакциями, MVCC, mutex

Postgresql - уровни изоляции READ UNCOMMITED, READ COMMITED, REPEATABLE READ, SERIALIZABLE